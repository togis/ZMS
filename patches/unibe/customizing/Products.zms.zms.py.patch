diff --git a/Products/zms/zms.py b/Products/zms/zms.py
index 75dcb3e9..d5d07988 100644
--- a/Products/zms/zms.py
+++ b/Products/zms/zms.py
@@ -99,7 +99,7 @@ def importTheme(self, theme):
 # ------------------------------------------------------------------------------
 #  initZMS:
 # ------------------------------------------------------------------------------
-# A new ZMS node can be initalized as a stand-alone client (master) or 
+# A new ZMS node can be initalized as a stand-alone client (master) or
 # as subordinated client acquiring content models and sharing the zmsindex.
 # Use a request variable 'acquire' =  1 to initalize ZMS as a client
 def initZMS(self, id, titlealt, title, lang, manage_lang, REQUEST):
@@ -135,7 +135,7 @@ def initZMS(self, id, titlealt, title, lang, manage_lang, REQUEST):
   obj.setConfProperty('ZMS.autocommit', 1)
 
   ### Init ZMS default content-model.
-  _confmanager.initConf(obj, 'conf:com.zms.foundation*')
+  _confmanager.initConf(obj, 'conf:com.zms.foundation')
   _confmanager.initConf(obj, 'conf:com.zms.catalog.zcatalog')
 
   ### Init ZMS index.
@@ -156,10 +156,10 @@ def initZMS(self, id, titlealt, title, lang, manage_lang, REQUEST):
   obj.setObjProperty('titlealt', titlealt, lang)
   obj.setObjProperty('title', title, lang)
   obj.onChangeObj(REQUEST, forced=1)
-  
+
   # Init Object-Children
   obj.initObjChildren(REQUEST)
-  
+
   ### Return new ZMS instance.
   return obj
 
@@ -190,12 +190,12 @@ def manage_addZMS(self, lang, manage_lang, REQUEST, RESPONSE):
     homeElmnt = Folder(REQUEST['folder_id'])
     self._setObject(homeElmnt.id, homeElmnt)
     homeElmnt = [x for x in self.objectValues() if x.id == homeElmnt.id][0]
-    
+
     ##### Add ZMS ####
     titlealt = 'ZMS home'
     title = 'ZMS - Python-based Content Management System for Science, Technology and Medicine'
     obj = initZMS(homeElmnt, 'content', titlealt, title, lang, manage_lang, REQUEST)
-    
+
     ##### Add Theme ####
     themeId = importTheme(obj,REQUEST['theme'])
     obj.setConfProperty('ZMS.theme',themeId)
@@ -210,7 +210,7 @@ def manage_addZMS(self, lang, manage_lang, REQUEST, RESPONSE):
     initContent(obj, 'com.zms.search.content.xml', REQUEST)
 
     # Initialize catalog adapter / connector.
-    catalog_adapter = obj.getCatalogAdapter() 
+    catalog_adapter = obj.getCatalogAdapter()
     catalog_connector = catalog_adapter.add_connector('zcatalog_connector')
     catalog_connector.manage_init()
     catalog_adapter.reindex(catalog_connector, obj, recursive=True)
@@ -371,7 +371,40 @@ class ZMS(
       file.close()
       zms_custom_version = os.environ.get('ZMS_CUSTOM_VERSION', '')
       if custom and zms_custom_version != '':
-        rtn += ' ({})'.format(zms_custom_version)
+        rtn += f'&nbsp;(<samp id="zms_custom_version">{zms_custom_version}</samp>)'
+        # Generate revisions and custom version gathering commit hashes of git submodules
+        # see Lines 37-46 unibe-cms/.github/workflows/build-and-push.yml
+        revisions = _fileutil.getOSPath('/app/revisions.txt')
+        if os.path.exists(revisions):
+            file = open(revisions, 'r')
+            zms_submodule_revisions = file.read()
+            file.close()
+            rtn += f"""
+                <span class="d-inline-block" data-toggle="popover"
+                    title="Git revisions"
+                    data-content="{zms_submodule_revisions}">
+                    <i class="fab fa-git-square fa-lg"></i>
+                </span>
+                <script>
+                    $(function () {{
+                        $('[data-toggle="popover"]').popover();
+                        // CAVEAT: Slicing below relies on commit hashes at https://github.com/idasm-unibe-ch/unibe-cms/tree/...
+                        const zms_custom_version = $('#zms_custom_version').text().replaceAll('(', '').replaceAll(')', '');
+                        const github_link = zms_custom_version.substr(zms_custom_version.indexOf('https://github.com'), zms_custom_version.length);
+                        const version_str = zms_custom_version.substr(0, zms_custom_version.indexOf('https://github.com')).trim();
+                        if (github_link.indexOf('https://github.com') == 0) {{
+                            $('#zms_custom_version').html('<a href="'+github_link+'" title="'+github_link.slice(0, 58)+'" target="_blank">'+version_str+'</a>');
+                        }}
+                    }})
+                </script>
+                <style>
+                    .popover-body {{
+                        white-space: break-spaces;
+                        width: auto;
+                        font-size: smaller;
+                    }}
+                </style>
+                """
       if custom and os.path.exists(_fileutil.getOSPath(package_home(globals())+'/../../.git/FETCH_HEAD')):
         file = open(_fileutil.getOSPath(package_home(globals())+'/../../.git/FETCH_HEAD'),'r')
         FETCH_HEAD = file.read()
